{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`;\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: Helvetica;\n    color: #FFF;\n`;\nconst Margin20 = styled.div`\n    margin: 20px;\n`;\n\nfunction HackAnimation() {\n  const [numberNodes, setNumberNodes] = useState(0);\n  const [activeNodes, setActiveNodes] = useState([]);\n  const [tree, setTree] = useState([...Array(200)].map((x, index) => {\n    return {\n      data: 0,\n      id: index,\n      parent: (index - 1) / 2,\n      left: index * 2 + 1,\n      right: index * 2 + 2\n    };\n  }));\n  return {\n    tree\n  };\n}\n\nexport default HackAnimation;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/hackanimation.js"],"names":["React","useEffect","useState","styled","motion","Navbar","TestSandbox","div","ListWrapper","DisplayNode","NodeContent","Margin20","HackAnimation","numberNodes","setNumberNodes","activeNodes","setActiveNodes","tree","setTree","Array","map","x","index","data","id","parent","left","right"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;;;;;CAA/B;AAOA,MAAMC,WAAW,GAAGL,MAAM,CAACI,GAAI;;;;;;;;CAA/B;AAUA,MAAME,WAAW,GAAGN,MAAM,CAACI,GAAI;;;;;;;;;;CAA/B;AAYA,MAAMG,WAAW,GAAGP,MAAM,CAACI,GAAI;;;;;;CAA/B;AAQA,MAAMI,QAAQ,GAAGR,MAAM,CAACI,GAAI;;CAA5B;;AAIA,SAASK,aAAT,GAAwB;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,CAAC,GAAGiB,KAAK,CAAC,GAAD,CAAT,EAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/D,WAAO;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,EAAE,EAAEF,KAAd;AAAqBG,MAAAA,MAAM,EAAE,CAACH,KAAK,GAAC,CAAP,IAAU,CAAvC;AAA0CI,MAAAA,IAAI,EAAEJ,KAAK,GAAG,CAAR,GAAY,CAA5D;AAA+DK,MAAAA,KAAK,EAAEL,KAAK,GAAG,CAAR,GAAY;AAAlF,KAAP;AACH,GAFgC,CAAD,CAAhC;AAIA,SACI;AAACL,IAAAA;AAAD,GADJ;AAGH;;AAED,eAAeL,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\n\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`\n\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`\n\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: Helvetica;\n    color: #FFF;\n`\n\nconst Margin20 = styled.div`\n    margin: 20px;\n`\n\nfunction HackAnimation(){\n    const [numberNodes, setNumberNodes] = useState(0);\n    const [activeNodes, setActiveNodes] = useState([]);\n    const [tree, setTree] = useState([...Array(200)].map((x, index) => {\n        return {data: 0, id: index, parent: (index-1)/2, left: index * 2 + 1, right: index * 2 + 2 }\n    }));\n\n    return (\n        {tree}\n    );\n}\n\nexport default HackAnimation;"]},"metadata":{},"sourceType":"module"}
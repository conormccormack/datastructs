{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/hackanimation.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport { stringify } from \"query-string\";\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`;\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: Helvetica;\n    color: #FFF;\n`;\nconst Margin20 = styled.div`\n    margin: 20px;\n`;\n\nfunction HackAnimation() {\n  const [numberNodes, setNumberNodes] = useState(0);\n  const [activeNodes, setActiveNodes] = useState([]);\n  const [tree, setTree] = useState([...Array(200)].map((x, index) => {\n    const parentId = index > 0 ? Math.floor((index - 1) / 2) : null;\n    return {\n      data: 0,\n      id: index,\n      parent: parentId,\n      left: index * 2 + 1,\n      right: index * 2 + 2\n    };\n  }));\n  console.log(tree);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TestSandbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default HackAnimation;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/hackanimation.js"],"names":["React","useEffect","useState","styled","motion","Navbar","stringify","TestSandbox","div","ListWrapper","DisplayNode","NodeContent","Margin20","HackAnimation","numberNodes","setNumberNodes","activeNodes","setActiveNodes","tree","setTree","Array","map","x","index","parentId","Math","floor","data","id","parent","left","right","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;;;;;CAA/B;AAOA,MAAMC,WAAW,GAAGN,MAAM,CAACK,GAAI;;;;;;;;CAA/B;AAUA,MAAME,WAAW,GAAGP,MAAM,CAACK,GAAI;;;;;;;;;;CAA/B;AAYA,MAAMG,WAAW,GAAGR,MAAM,CAACK,GAAI;;;;;;CAA/B;AAQA,MAAMI,QAAQ,GAAGT,MAAM,CAACK,GAAI;;CAA5B;;AAIA,SAASK,aAAT,GAAwB;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAC,GAAGkB,KAAK,CAAC,GAAD,CAAT,EAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/D,UAAMC,QAAQ,GAAGD,KAAK,GAAG,CAAR,GAAYE,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAC,CAAP,IAAU,CAArB,CAAZ,GAAsC,IAAvD;AACA,WAAO;AAACI,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,EAAE,EAAEL,KAAd;AAAqBM,MAAAA,MAAM,EAAEL,QAA7B;AAAuCM,MAAAA,IAAI,EAAEP,KAAK,GAAG,CAAR,GAAY,CAAzD;AAA4DQ,MAAAA,KAAK,EAAER,KAAK,GAAG,CAAR,GAAY;AAA/E,KAAP;AACH,GAHgC,CAAD,CAAhC;AAKAS,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH;;AAED,eAAeL,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport {stringify} from \"query-string\";\n\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`\n\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`\n\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: Helvetica;\n    color: #FFF;\n`\n\nconst Margin20 = styled.div`\n    margin: 20px;\n`\n\nfunction HackAnimation(){\n    const [numberNodes, setNumberNodes] = useState(0);\n    const [activeNodes, setActiveNodes] = useState([]);\n    const [tree, setTree] = useState([...Array(200)].map((x, index) => {\n        const parentId = index > 0 ? Math.floor((index-1)/2) : null;\n        return {data: 0, id: index, parent: parentId, left: index * 2 + 1, right: index * 2 + 2 }\n    }));\n\n    console.log(tree);\n    return (\n        <div>\n            <Navbar/>\n            <TestSandbox>\n                \n            </TestSandbox>\n        </div>\n    );\n}\n\nexport default HackAnimation;"]},"metadata":{},"sourceType":"module"}
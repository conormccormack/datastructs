{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/animetest.js\";\nimport React, { Component } from 'react';\nimport anime from 'animejs';\nimport '../css/bst.css';\nimport styled from 'styled-components';\nconst PageWrapper = styled.div`\n    padding-left: 6rem;\n    padding-right: 6rem;\n    padding-top: 2rem;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\nconst Controls = styled.div`\n\n`;\nconst NodeContainer = styled.div`\n`;\n\nclass BinarySearchTree {\n  constructor() {\n    this.root = null;\n  }\n\n  insert(value) {\n    var newNode = new Node(value);\n    if (this.root === null) this.root = newNode;else this.insertNode(this.root, newNode);\n  }\n\n  insertNode(root, newNode) {\n    if (newNode.value < root.value) {\n      if (root.left !== null) this.insertNode(root.left, newNode);else root.left = newNode;\n    } else if (newNode.value >= root.value) {\n      if (root.right !== null) this.insertNode(root.right, newNode);else root.right = newNode;\n    }\n  }\n\n}\n\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n}\n\nfunction addNode(value, count) {\n  var node = document.createElement(\"div\");\n  node.setAttribute('class', 'bstnode');\n  node.setAttribute('id', `node${count}`);\n  var text = document.createTextNode(value);\n  node.appendChild(text);\n  document.getElementById(\"nodecontainer\").appendChild(node);\n}\n\nfunction leftRight(distance, selector) {\n  console.log(\"selector: \" + selector);\n  anime({\n    targets: selector,\n    keyframes: [{\n      translateX: distance\n    }, {\n      translateX: 0\n    }],\n    duration: 1500\n  });\n}\n\nclass AnimeTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      bst: new BinarySearchTree(),\n      count: 0\n    };\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleInputSubmit(event) {\n    event.preventDefault();\n    this.state.bst.insert(this.state.value);\n    setTimeout(0);\n    addNode(this.state.value, this.state.count);\n    var el = document.querySelectorAll(`#node${this.state.count}`);\n    leftRight(this.state.value, `#node${this.state.count}`);\n    this.setState({\n      value: '',\n      count: this.state.count + 1\n    });\n    console.log(this.state.bst);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NodeContainer, {\n      id: \"nodecontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Controls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleInputSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }), \" Input\"))));\n  }\n\n}\n\nexport default AnimeTest;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/animetest.js"],"names":["React","Component","anime","styled","PageWrapper","div","Controls","NodeContainer","BinarySearchTree","constructor","root","insert","value","newNode","Node","insertNode","left","right","addNode","count","node","document","createElement","setAttribute","text","createTextNode","appendChild","getElementById","leftRight","distance","selector","console","log","targets","keyframes","translateX","duration","AnimeTest","props","state","bst","handleInputSubmit","bind","handleInputChange","event","setState","target","preventDefault","setTimeout","el","querySelectorAll","shouldComponentUpdate","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA/B;AAQA,MAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAI;;CAA5B;AAIA,MAAME,aAAa,GAAGJ,MAAM,CAACE,GAAI;CAAjC;;AAGA,MAAMG,gBAAN,CAAuB;AACnBC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAY,IAAZ;AACH;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,QAAIC,OAAO,GAAG,IAAIC,IAAJ,CAAUF,KAAV,CAAd;AACA,QAAI,KAAKF,IAAL,KAAc,IAAlB,EAAwB,KAAKA,IAAL,GAAYG,OAAZ,CAAxB,KACK,KAAKE,UAAL,CAAgB,KAAKL,IAArB,EAA2BG,OAA3B;AACR;;AACDE,EAAAA,UAAU,CAACL,IAAD,EAAOG,OAAP,EAAe;AACrB,QAAIA,OAAO,CAACD,KAAR,GAAgBF,IAAI,CAACE,KAAzB,EAA+B;AAC3B,UAAIF,IAAI,CAACM,IAAL,KAAc,IAAlB,EAAwB,KAAKD,UAAL,CAAgBL,IAAI,CAACM,IAArB,EAA2BH,OAA3B,EAAxB,KACKH,IAAI,CAACM,IAAL,GAAYH,OAAZ;AACR,KAHD,MAGO,IAAIA,OAAO,CAACD,KAAR,IAAiBF,IAAI,CAACE,KAA1B,EAAgC;AACnC,UAAIF,IAAI,CAACO,KAAL,KAAe,IAAnB,EAAyB,KAAKF,UAAL,CAAgBL,IAAI,CAACO,KAArB,EAA4BJ,OAA5B,EAAzB,KACKH,IAAI,CAACO,KAAL,GAAaJ,OAAb;AACR;AACJ;;AAlBkB;;AAqBvB,MAAMC,IAAN,CAAW;AACPL,EAAAA,WAAW,CAAEG,KAAF,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKI,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACH;;AALM;;AASX,SAASC,OAAT,CAAiBN,KAAjB,EAAwBO,KAAxB,EAA+B;AAC3B,MAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAF,EAAAA,IAAI,CAACG,YAAL,CAAkB,OAAlB,EAA2B,SAA3B;AACAH,EAAAA,IAAI,CAACG,YAAL,CAAkB,IAAlB,EAAyB,OAAMJ,KAAM,EAArC;AACA,MAAIK,IAAI,GAAGH,QAAQ,CAACI,cAAT,CAAwBb,KAAxB,CAAX;AACAQ,EAAAA,IAAI,CAACM,WAAL,CAAiBF,IAAjB;AACAH,EAAAA,QAAQ,CAACM,cAAT,CAAwB,eAAxB,EAAyCD,WAAzC,CAAqDN,IAArD;AACH;;AAED,SAASQ,SAAT,CAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,QAA3B;AACA5B,EAAAA,KAAK,CAAC;AACF+B,IAAAA,OAAO,EAAEH,QADP;AAEFI,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,UAAU,EAAEN;AAAd,KADO,EAEP;AAAEM,MAAAA,UAAU,EAAE;AAAd,KAFO,CAFT;AAMFC,IAAAA,QAAQ,EAAE;AANR,GAAD,CAAL;AASH;;AAED,MAAMC,SAAN,SAAwBpC,SAAxB,CAAkC;AAC9BQ,EAAAA,WAAW,CAAE6B,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT3B,MAAAA,KAAK,EAAE,EADE;AAET4B,MAAAA,GAAG,EAAE,IAAIhC,gBAAJ,EAFI;AAGTW,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKA,SAAKsB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,SAAKC,QAAL,CAAc;AAAEjC,MAAAA,KAAK,EAAEgC,KAAK,CAACE,MAAN,CAAalC;AAAtB,KAAd;AACH;;AAED6B,EAAAA,iBAAiB,CAACG,KAAD,EAAQ;AACrBA,IAAAA,KAAK,CAACG,cAAN;AACA,SAAKR,KAAL,CAAWC,GAAX,CAAe7B,MAAf,CAAsB,KAAK4B,KAAL,CAAW3B,KAAjC;AACAoC,IAAAA,UAAU,CAAC,CAAD,CAAV;AACA9B,IAAAA,OAAO,CAAC,KAAKqB,KAAL,CAAW3B,KAAZ,EAAmB,KAAK2B,KAAL,CAAWpB,KAA9B,CAAP;AACA,QAAI8B,EAAE,GAAG5B,QAAQ,CAAC6B,gBAAT,CAA2B,QAAO,KAAKX,KAAL,CAAWpB,KAAM,EAAnD,CAAT;AACAS,IAAAA,SAAS,CAAC,KAAKW,KAAL,CAAW3B,KAAZ,EAAoB,QAAO,KAAK2B,KAAL,CAAWpB,KAAM,EAA5C,CAAT;AACA,SAAK0B,QAAL,CAAc;AAAEjC,MAAAA,KAAK,EAAE,EAAT;AAAaO,MAAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWpB,KAAX,GAAmB;AAAvC,KAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWC,GAAvB;AACH;;AAEDW,EAAAA,qBAAqB,GAAE;AACnB,WAAO,KAAP;AACH;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKZ,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,KAAKE,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WADJ,CADJ,CAFJ,CADJ;AAYH;;AAhD6B;;AAqDlC,eAAeN,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport anime from 'animejs';\nimport '../css/bst.css';\nimport styled from 'styled-components';\n\nconst PageWrapper = styled.div`\n    padding-left: 6rem;\n    padding-right: 6rem;\n    padding-top: 2rem;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`\n\nconst Controls = styled.div`\n\n`\n\nconst NodeContainer = styled.div`\n`\n\nclass BinarySearchTree {\n    constructor() {\n        this.root = null;   \n    }\n\n    insert(value) {\n        var newNode = new Node (value);\n        if (this.root === null) this.root = newNode;\n        else this.insertNode(this.root, newNode);\n    }\n    insertNode(root, newNode){ \n        if (newNode.value < root.value){\n            if (root.left !== null) this.insertNode(root.left, newNode);\n            else root.left = newNode;\n        } else if (newNode.value >= root.value){\n            if (root.right !== null) this.insertNode(root.right, newNode);\n            else root.right = newNode;\n        }\n    }\n}\n\nclass Node {\n    constructor (value){\n        this.value = value;\n        this.left = null;\n        this.right = null;\n    }\n}\n\n\nfunction addNode(value, count) {\n    var node = document.createElement(\"div\");\n    node.setAttribute('class', 'bstnode');\n    node.setAttribute('id', `node${count}`);\n    var text = document.createTextNode(value);\n    node.appendChild(text);\n    document.getElementById(\"nodecontainer\").appendChild(node);\n}\n\nfunction leftRight(distance, selector) {\n    console.log(\"selector: \" + selector)\n    anime({\n        targets: selector,\n        keyframes: [\n            { translateX: distance },\n            { translateX: 0 },\n        ],\n        duration: 1500,\n    });\n\n}\n\nclass AnimeTest extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: '',\n            bst: new BinarySearchTree,\n            count: 0,\n        };\n        this.handleInputSubmit = this.handleInputSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleInputSubmit(event) {\n        event.preventDefault();\n        this.state.bst.insert(this.state.value);\n        setTimeout(0);\n        addNode(this.state.value, this.state.count);\n        var el = document.querySelectorAll(`#node${this.state.count}`);\n        leftRight(this.state.value, `#node${this.state.count}`);\n        this.setState({ value: '', count: this.state.count + 1});\n        console.log(this.state.bst);\n    }\n\n    shouldComponentUpdate(){\n        return false;\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){ \n        return(\n            <PageWrapper>\n                <NodeContainer id=\"nodecontainer\" />\n                <Controls>\n                    <form onSubmit={this.handleInputSubmit}>\n                        <label>\n                            <input type=\"number\" onChange={this.handleInputChange}/> Input\n                        </label>\n                    </form>\n                </Controls>\n            </PageWrapper>\n        );\n    }\n}\n\n\n\nexport default AnimeTest;"]},"metadata":{},"sourceType":"module"}
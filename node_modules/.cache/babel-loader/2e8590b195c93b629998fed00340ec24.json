{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/binarytree.js\";\nimport React, { useEffect, useState } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport styled from 'styled-components'; // Build and maintain state as array.\n// Each element in array represents a level on the tree.\n\nfunction BinaryTree(props) {\n  // Return level on tree given id\n  const computeLevel = id => Math.floor(Math.log2(id + 1)); // Compute left-right zero based index of id on its level in the tree.\n\n\n  const computeIndexOnLevel = (id, level) => id + 1 - Math.pow(2, level);\n\n  return /*#__PURE__*/React.createElement(motion.div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.displayNodes.map(node => ({ ...node\n  }))));\n}\n\nexport default BinaryTree;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/binarytree.js"],"names":["React","useEffect","useState","AnimatePresence","motion","styled","BinaryTree","props","computeLevel","id","Math","floor","log2","computeIndexOnLevel","level","pow","displayNodes","map","node"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,eAAR,EAAyBC,MAAzB,QAAsC,eAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA2B;AACvB;AACA,QAAMC,YAAY,GAAGC,EAAE,IAAKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,IAAL,CAAUH,EAAE,GAAG,CAAf,CAAX,CAA5B,CAFuB,CAGvB;;;AACA,QAAMI,mBAAmB,GAAG,CAACJ,EAAD,EAAKK,KAAL,KAAgBL,EAAE,GAAG,CAAL,GAASC,IAAI,CAACK,GAAL,CAAS,CAAT,EAAWD,KAAX,CAArD;;AAEA,sBACI,oBAAC,MAAD,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,KAAK,CAACS,YAAN,CAAmBC,GAAnB,CAAuBC,IAAI,KAAK,EAAC,GAAGA;AAAJ,GAAL,CAA3B,CADD,CADJ,CADJ;AAQH;;AAED,eAAeZ,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {AnimatePresence, motion} from 'framer-motion';\nimport styled from 'styled-components';\n\n// Build and maintain state as array.\n// Each element in array represents a level on the tree.\n\nfunction BinaryTree (props){\n    // Return level on tree given id\n    const computeLevel = id => (Math.floor(Math.log2(id + 1)));\n    // Compute left-right zero based index of id on its level in the tree.\n    const computeIndexOnLevel = (id, level) => (id + 1 - Math.pow(2,level));\n\n    return(\n        <motion.div>\n            <AnimatePresence>\n            {props.displayNodes.map(node => ({...node}) )}\n            </AnimatePresence>\n        </motion.div>\n    )\n\n}\n\nexport default BinaryTree;"]},"metadata":{},"sourceType":"module"}
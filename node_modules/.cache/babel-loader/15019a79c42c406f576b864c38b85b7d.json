{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/testanimation.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree';\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`;\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`;\nconst Margin20 = styled.div`\n    margin: 20px;\n`;\n\nclass Node {\n  constructor(data, left = null, right = null) {\n    this.data = data;\n    this.leftChild = left;\n    this.rightChild = right;\n  }\n\n}\n\nconst TemplateTree = [{\n  data: 10,\n  left: {\n    data: 2,\n    left: null,\n    right: null\n  },\n  right: {\n    data: 12,\n    left: null,\n    right: null\n  }\n}];\n\nfunction TestAnimation() {\n  const [inputValue, setInputValue] = useState([]);\n  const [Tree, setTree] = useState([]);\n\n  const onInsertDown = event => {\n    event.preventDefault();\n\n    if (Tree[0] === null) {\n      setTree([...Tree, {\n        data: inputValue,\n        left: null,\n        right: null\n      }]);\n    }\n  };\n\n  const handleChange = event => setInputValue(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TestSandbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, Tree[0] && Tree[0].data))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      paddingLeft: '100px'\n    },\n    onSubmit: onInsertDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: inputValue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), \"Insert\")));\n}\n\nexport default TestAnimation;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/testanimation.js"],"names":["React","useEffect","useState","styled","motion","Navbar","BinaryTree","TestSandbox","div","ListWrapper","DisplayNode","NodeContent","Margin20","Node","constructor","data","left","right","leftChild","rightChild","TemplateTree","TestAnimation","inputValue","setInputValue","Tree","setTree","onInsertDown","event","preventDefault","handleChange","target","value","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree'\n\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`\n\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`\n\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`\n\nconst Margin20 = styled.div`\n    margin: 20px;\n`\n\nclass Node {\n    constructor(data, left = null, right = null) {\n        this.data = data;\n        this.leftChild = left;\n        this.rightChild = right;\n    }\n}\n\nconst TemplateTree = [\n    {\n        data: 10,\n        left: {\n            data: 2,\n            left: null,\n            right: null,\n        },\n        right: {\n            data: 12,\n            left: null,\n            right: null,\n        },\n    }\n]\n\n\nfunction TestAnimation(){\n    const [inputValue, setInputValue ] = useState([]);\n    const [Tree, setTree] = useState([]);\n\n\n\n    const onInsertDown = event => {\n        event.preventDefault();\n        if (Tree[0] === null){\n            setTree([\n                ...Tree,\n                {\n                    data: inputValue,\n                    left: null,\n                    right: null,\n                }\n            ])\n        }\n    };\n\n\n    const handleChange = event => setInputValue(event.target.value);\n\n    return (\n        <div>\n            <Navbar/>\n            <TestSandbox>\n                <div>\n                    <ul>\n                        <li>{Tree[0] && Tree[0].data}</li>\n                    </ul>\n                </div>\n                <form style={{paddingLeft:'100px'}} onSubmit={onInsertDown}>\n                    <input type='number' value={inputValue} onChange={handleChange}></input>\n                    Insert\n                </form>\n            </TestSandbox>\n        </div>\n    )\n\n}\n\nexport default TestAnimation;"]},"metadata":{},"sourceType":"module"}
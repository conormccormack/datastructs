{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/testanimation.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree';\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`;\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`;\nconst Margin20 = styled.div`\n    margin: 20px;\n`; // class Node {\n//     constructor(data, left = null, right = null) {\n//         this.data = data;\n//         this.leftChild = left;\n//         this.rightChild = right;\n//     }\n// }\n\nconst TemplateTree = [{\n  data: 10,\n  left: {\n    data: 2,\n    left: null,\n    right: null\n  },\n  right: {\n    data: 12,\n    left: null,\n    right: null\n  }\n}];\n\nfunction TestAnimation() {\n  const [inputValue, setInputValue] = useState([]);\n  const [tree, setTree] = useState([]);\n  const [numberNodes, setNumberNodes] = useState(0);\n\n  const onInsertDown = event => {\n    event.preventDefault();\n\n    if (numberNodes === 0) {\n      setTree([...tree, {\n        data: inputValue,\n        left: null,\n        right: null\n      }]);\n    }\n\n    setNumberNodes(numberNodes => numberNodes + 1);\n  };\n\n  useEffect(() => {}, [tree]);\n\n  const handleChange = event => setInputValue(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TestSandbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, numberNodes > 0 && /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      scale: 0\n    },\n    animate: {\n      scale: 1\n    },\n    whileHover: {\n      scale: 1.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DisplayNode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NodeContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, tree[0].data)))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      paddingLeft: '100px'\n    },\n    onSubmit: onInsertDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }), \" Input\"))));\n}\n\nexport default TestAnimation;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/testanimation.js"],"names":["React","useEffect","useState","styled","motion","Navbar","BinaryTree","TestSandbox","div","ListWrapper","DisplayNode","NodeContent","Margin20","TemplateTree","data","left","right","TestAnimation","inputValue","setInputValue","tree","setTree","numberNodes","setNumberNodes","onInsertDown","event","preventDefault","handleChange","target","value","scale","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree'\n\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`\n\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`\n\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`\n\nconst Margin20 = styled.div`\n    margin: 20px;\n`\n\n\n// class Node {\n//     constructor(data, left = null, right = null) {\n//         this.data = data;\n//         this.leftChild = left;\n//         this.rightChild = right;\n//     }\n// }\n\nconst TemplateTree = [\n    {\n        data: 10,\n        left: {\n            data: 2,\n            left: null,\n            right: null,\n        },\n        right: {\n            data: 12,\n            left: null,\n            right: null,\n        },\n    }\n]\n\n\nfunction TestAnimation(){\n    const [inputValue, setInputValue ] = useState([]);\n    const [tree, setTree] = useState([]);\n    const [numberNodes, setNumberNodes] = useState(0);\n\n    const onInsertDown = event => {\n        event.preventDefault();\n        if (numberNodes === 0){\n            setTree([\n                ...tree,\n                {\n                    data: inputValue,\n                    left: null,\n                    right: null,\n                }\n            ])\n        }\n        setNumberNodes(numberNodes => numberNodes + 1);\n    };\n\n    useEffect( () =>{\n\n    }, [tree]);\n\n    const handleChange = event => setInputValue(event.target.value);\n\n    return (\n        <div>\n            <Navbar/>\n            <TestSandbox>\n                <ListWrapper>\n                    { numberNodes > 0 &&\n                        <motion.div initial={{scale: 0}} animate={{scale: 1}} whileHover={{scale: 1.5}}>\n                            <DisplayNode>\n                                <NodeContent>{tree[0].data}</NodeContent>\n                            </DisplayNode>\n                        </motion.div>\n                    }\n                </ListWrapper>\n                <form style={{paddingLeft:'100px'}} onSubmit={onInsertDown}>\n                    <label>\n                        <input type='text' value={inputValue} onChange={handleChange}></input> Input\n                    </label>\n                </form>\n            </TestSandbox>\n        </div>\n    )\n\n}\n\nexport default TestAnimation;"]},"metadata":{},"sourceType":"module"}
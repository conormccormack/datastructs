{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/testanimation.js\";\nimport React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree';\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`;\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`;\nconst Margin20 = styled.div`\n    margin: 20px;\n`;\n\nclass Node {\n  constructor(data, left = null, right = null) {\n    this.data = data;\n    this.leftChild = left;\n    this.rightChild = right;\n  }\n\n}\n\nfunction TestAnimation() {\n  const [nodeList, setNodeList] = useState([]);\n  const [inputValue, setInputValue] = useState([]);\n  const [Tree, setTree] = useState([{\n    data: 10,\n    left: {\n      data: 2,\n      left: null,\n      right: null\n    },\n    right: {\n      data: 12,\n      left: null,\n      right: null\n    }\n  }]);\n\n  const onInsertDown = event => {\n    event.preventDefault();\n    Tree.push(new Node(inputValue, null, null));\n    setNodeList(nodeList.concat( /*#__PURE__*/React.createElement(Margin20, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(motion.div, {\n      initial: {\n        scale: 0\n      },\n      animate: {\n        scale: 1\n      },\n      whileHover: {\n        scale: 1.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DisplayNode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NodeContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, Tree))))));\n  };\n\n  const handleChange = event => setInputValue(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TestSandbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, Tree), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      paddingLeft: '100px'\n    },\n    onSubmit: onInsertDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), \"Insert\")));\n}\n\nexport default TestAnimation;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/testanimation.js"],"names":["React","useState","styled","motion","Navbar","BinaryTree","TestSandbox","div","ListWrapper","DisplayNode","NodeContent","Margin20","Node","constructor","data","left","right","leftChild","rightChild","TestAnimation","nodeList","setNodeList","inputValue","setInputValue","Tree","setTree","onInsertDown","event","preventDefault","push","concat","scale","handleChange","target","value","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Navbar from \"./navbar\";\nimport BinaryTree from './binarytree'\n\n\nconst TestSandbox = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n    grid-template-columns: 1fr 1fr;\n    display: grid;\n`\n\nconst ListWrapper = styled.div`\n    height: 200px; \n    width: 100px;\n    margin-left: 100px;\n    margin-right: 100px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n`\n\nconst DisplayNode = styled.div`\n    background-color: #D8BBFF; \n    border-radius: 50%;\n    margin: 20px;\n    height: 100px; \n    width: 100px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst NodeContent = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    font-size: 30px;\n    font-family: open-sans;\n    \n`\n\nconst Margin20 = styled.div`\n    margin: 20px;\n`\n\nclass Node {\n    constructor(data, left = null, right = null) {\n        this.data = data;\n        this.leftChild = left;\n        this.rightChild = right;\n    }\n}\n\nfunction TestAnimation(){\n    const [nodeList, setNodeList] = useState([]);\n    const [inputValue, setInputValue ] = useState([]);\n    const [Tree, setTree] = useState([\n        {\n            data: 10,\n            left: {\n                data: 2,\n                left: null,\n                right: null,\n            },\n            right: {\n                data: 12,\n                left: null,\n                right: null,\n            },\n        }\n    ]);\n\n    const onInsertDown = event => {\n        event.preventDefault();\n        Tree.push(new Node(inputValue, null, null ));\n\n        setNodeList(nodeList.concat(<Margin20>\n            <motion.div initial={{ scale: 0 }} animate={{ scale : 1}} whileHover={{ scale: 1.5 }} >\n                <DisplayNode>\n                    <NodeContent>{Tree}</NodeContent>\n                </DisplayNode>\n            </motion.div>\n        </Margin20>));\n    };\n\n    const handleChange = event => setInputValue(event.target.value);\n\n    return (\n        <div>\n            <Navbar/>\n            <TestSandbox>\n                <div>\n                    {Tree}\n                </div>\n                <form style={{paddingLeft:'100px'}} onSubmit={onInsertDown}>\n                    <input type='text' value={inputValue} onChange={handleChange}></input>\n                    Insert\n                </form>\n            </TestSandbox>\n        </div>\n    )\n\n}\n\nexport default TestAnimation;"]},"metadata":{},"sourceType":"module"}
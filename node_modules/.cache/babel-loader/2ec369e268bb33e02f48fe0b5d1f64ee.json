{"ast":null,"code":"var _jsxFileName = \"/Users/conormccormack/datastructs/src/components/animetest.js\";\nimport React, { Component } from 'react';\nimport anime from 'animejs';\nimport '../css/bst.css';\nimport styled from 'styled-components';\nconst PageWrapper = styled.div`\n    background-color: #EFE7E2;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\nconst Controls = styled.div`\n\n`;\nconst NodeContainer = styled.div`\n`;\n\nclass BinarySearchTree {\n  constructor(node) {\n    this.root = node;\n  }\n\n}\n\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n}\n\nasync function addNode(value) {\n  var node = document.createElement(\"div\");\n  node.setAttribute('class', 'bstnode');\n  var text = document.createTextNode(value);\n  node.appendChild(text);\n  document.getElementById(\"nodecontainer\").appendChild(node);\n}\n\nasync function animate() {\n  anime({\n    targets: '#container > div',\n    keyframes: [{\n      translateX: 0\n    }, {\n      translateY: 500\n    }, {\n      translateX: 800,\n      translateY: 0\n    }, {\n      translateY: 500\n    }, {\n      translateX: 0,\n      translateY: 0\n    }],\n    duration: 4000\n  });\n}\n\nclass AnimeTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleInputSubmit(event) {\n    addNode(this.state.value);\n    this.setState({\n      value: ''\n    });\n    event.preventDefault();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NodeContainer, {\n      id: \"nodecontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Controls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleInputSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleInputChange,\n      value: this.inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default AnimeTest;","map":{"version":3,"sources":["/Users/conormccormack/datastructs/src/components/animetest.js"],"names":["React","Component","anime","styled","PageWrapper","div","Controls","NodeContainer","BinarySearchTree","constructor","node","root","Node","value","left","right","addNode","document","createElement","setAttribute","text","createTextNode","appendChild","getElementById","animate","targets","keyframes","translateX","translateY","duration","AnimeTest","props","state","handleInputSubmit","bind","handleInputChange","event","setState","target","preventDefault","shouldComponentUpdate","componentDidMount","render","inputValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport anime from 'animejs';\nimport '../css/bst.css';\nimport styled from 'styled-components';\n\nconst PageWrapper = styled.div`\n    background-color: #EFE7E2;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`\n\nconst Controls = styled.div`\n\n`\n\nconst NodeContainer = styled.div`\n`\n\nclass BinarySearchTree {\n    constructor(node) {\n        this.root = node; \n    }\n}\n\nclass Node {\n    constructor (value){\n        this.value = value;\n        this.left = null;\n        this.right = null;\n    }\n}\n\n\nasync function addNode(value) {\n    var node = document.createElement(\"div\");\n    node.setAttribute('class', 'bstnode')\n    var text = document.createTextNode(value);\n    node.appendChild(text);\n    document.getElementById(\"nodecontainer\").appendChild(node);\n}\n\nasync function animate() {\n    anime({\n        targets: '#container > div',\n        keyframes: [\n            {translateX: 0},\n            {translateY: 500},\n            {translateX: 800, translateY: 0},\n            {translateY: 500},\n            {translateX: 0, translateY: 0},\n        ],\n        duration: 4000,\n    });\n\n}\n\nclass AnimeTest extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: '',  \n        };\n        this.handleInputSubmit = this.handleInputSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleInputSubmit(event) {\n        addNode(this.state.value);\n        this.setState({ value: ''})\n        event.preventDefault();\n    }\n\n    shouldComponentUpdate(){\n        return false;\n    }\n\n    componentDidMount(){\n        \n    }\n    \n\n    render(){ \n        return(\n            <PageWrapper>\n                <NodeContainer id=\"nodecontainer\">\n                    \n                </NodeContainer>\n                <Controls>\n                    <form onSubmit={this.handleInputSubmit}>\n                        <input onChange={this.handleInputChange} value={this.inputValue}/> \n                    </form>\n                </Controls>\n            </PageWrapper>\n        );\n    }\n}\n\nexport default AnimeTest;"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["resources/images/darklogo.png","resources/images/logo_waves.svg","resources/images/darklogotag.svg","resources/fonts/Ramaraja-Regular.ttf","components/homebutton.js","components/navigationbutton.js","components/searchbar.js","components/login_register_button.js","components/navbar.js","components/home/homemaingraphic.js","components/home/mainlanding.js","components/home/home.js","components/aboutmaingraphic.js","components/about.js","components/catalog.js","components/premium.js","components/refnode.js","components/reftest.js","components/animetest.js","components/bst.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeButton","style","fontFamily","className","to","alt","src","require","Button","styled","div","NavigationButton","props","nextPage","includes","exploreCategory","replace","isExplore","textDecoration","color","dataStructures","category","queries","name","getSuggestions","value","inputValue","trim","toLowerCase","length","map","section","filter","query","getSuggestionValue","suggestion","getSectionSuggestions","renderSectionTitle","renderSuggestion","Searchbar","onChange","event","newValue","setState","onKeyDown","key","enterDown","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","this","inputProps","placeholder","multiSection","PureComponent","LoginButton","Buttontext","LoginRegister","NavLayout","SearchbarContainer","Navbar","role","ResponsiveGraphic","HomeMainGraphic","width","WelcomeHeadline","WelcomeBody","MainWrapper","WelcomeMessage","Mainlanding","HomeContainer","Home","variants","transition","initial","animate","exit","MainGraphic","AboutMainGraphic","AboutContainer","AboutHeadline","AboutMessage","AboutBody","Link","a","About","href","CatalogContainer","CatalogHeadline","Results","ResultCategory","ResultPage","Pages","url","resultsToHTML","results","cat","result","Catalog","queryString","parse","location","search","SearchResults","filt","db","i","res","j","push","resultsByCategory","term","view","PremiumContainer","PremiumHeadline","Premium","RefNode","React","forwardRef","ref","Transition","in","mountOnEnter","unmountOnExit","addEndListener","node","done","gsap","from","scale","ease","onComplete","id","marginLeft","TreeContainer","PageContainer","ControlContainer","Node","level","left","right","parent","line","isNew","BinarySearchTree","root","updateLevels","total","getTreeHeight","Math","max","array","getInOrderArray","subTreeSize","count","newNode","insertNode","removeRecurse","deleteNode","child_of_type","replacement","swap","findLeftmost","Reftree","memo","nodeRef","useRef","bst","useState","nodeData","setNodeData","removeCount","setRemoveCount","insertCount","setInsertCount","setCount","height","setInputValue","removeValue","setRemoveValue","message","setMessage","TransitionGroup","el","current","indexOf","onSubmit","e","preventDefault","isNaN","insert","parseFloat","type","target","success","shift_x","resizeTimer","PageWrapper","NodeContainer","TRAVERSE_DURATION","traverseCount","traverseOn","allowDuplicate","formatTimeline","anime","timeline","autoplay","numActiveNodes","x_distances","Map","addMessageToLog","addTraverseStep","setErrorMessage","add","targets","document","getElementById","innerHTML","easing","round","duration","removeElementFromDOM","shift_order","keyframes","translateX","translateY","NODE_RADIUS","background","stroke","toRemove","opacity","delay","complete","anim","remove","addNodeToDOM","createElement","classList","setAttribute","frontHighlight","text","createTextNode","appendChild","getWidthMidpoint","selector","getBoundingClientRect","size","options","begin","p","logs","scrollTop","scrollHeight","formatBinaryTree","tree","toggleFormDisable","buildNodeTimeline","buildEdgeTimeline","play","finished","x1","get","y1","x2","y2","getAttribute","d","x","set","child","svg","parent_selector","child_selector","container","bottom","y","path","createElementNS","addPathToDom","disabled","AnimeTest","multiInput","handleInputSubmit","bind","handleInputChange","handleRemoveChange","handleRemoveSubmit","toggleAllowDuplicate","calculateShiftX","onResize","updateActiveNodeCount","handleMultiSubmit","handleMultiChange","parseMulti","incrementActiveNodes","updateTreeHeight","focus","instructions","idx","open_brack","substring","close_brack","console","log","Error","add_group","split","concat","newNodes","error","toString","nodeContainer","rightOverflow","min","window","addEventListener","toggleTraverseOn","randomTree","Array","floor","random","sortedTree","sort","median","medianIndex","forEach","index","clearTimeout","setTimeout","onClick","defaultChecked","defaultValue","handleIntervalChange","rows","Component","Wrapper","Headline","BST","PageVariants","pageIn","pageInit","pageOut","PageTransition","App","useLocation","exitBeforeEnter","pathname","exact","render","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2f9a30cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/darklogo.474e48eb.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_waves.4c2dd6ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/darklogotag.fb6502fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ramaraja-Regular.0358271b.ttf\";","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction HomeButton(){\n    return (\n        <Link style={{ fontFamily: 'Ramaraja' }} className=\"homeLink\" to='/'>\n            <img className=\"logoImage\" alt=\"datastructs logo\" src={require(\"../resources/images/darklogo.png\")}/>\n        </Link>\n    );\n}\n\nexport default HomeButton;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport '../resources/fonts/fontawesome/css/all.css';\n\nconst Button = styled.div`\n    font-size: 16px;\n    vertical-align: text-bottom;\n    font-family: Raleway, sans-serif;\n    font-weight: 500;\n    padding-top: 8px;\n    padding-left: 15px;\n    padding-right: 15px;\n`\n\nfunction NavigationButton(props){\n    const parseNextPageLink = () => {\n        if (props.nextPage.includes('everything')){\n            return '/catalog?view=all'\n        } else if (props.nextPage.includes('explore')){\n            return `/catalog?view=${props.exploreCategory}`\n        } else {\n            return `/${props.nextPage.replace(/\\W/g, '')}`\n        }\n    };\n\n    const nextPage = parseNextPageLink();\n    const isExplore = props.nextPage.includes('ex');\n\n    return (\n        <Button>\n            <Link style={{textDecoration:'None' , color:'black'}} to={nextPage}> {props.nextPage}\n                {isExplore ? <i className=\"fas caret fa-caret-down\"/> : ''}\n            </Link>\n        </Button>\n    )\n}\n\nexport default NavigationButton;","import React, {PureComponent} from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport {Redirect} from 'react-router-dom';\nimport '../css/autocomplete.css';\n\nconst dataStructures = [\n    {\n        category: \"Trees\",\n        queries: [\n            {\n                name: 'AVL Tree'\n            },\n            {\n                name: 'Binary Search Tree'\n            },\n            {\n                name: 'Red-Black Tree'\n            },\n            {\n                name: 'Splay Tree'\n            },\n        ]\n    },\n    {\n        category: \"Basics\",\n        queries: [\n            {\n                name: 'Linked List'\n            },\n            {\n                name: 'Stack'\n            },\n            {\n                name: 'Queue'\n            },\n        ],\n    },\n    {\n        category: \"Sorting Algorithms\",\n        queries: [\n            {\n                name: 'Bubble Sort'\n            },\n            {\n                name: 'Selection Sort'\n            },\n            {\n                name: 'Insert Sort'\n            },\n            {\n                name: 'Merge Sort'\n            },\n            {\n                name: 'Quick Sort'\n            },\n            {\n                name: 'Radix Sort'\n            },\n            {\n                name: 'Heap Sort'\n            },\n        ],\n    },\n    {\n        category: \"Graph Algorithms\",\n        queries: [\n            {\n                name: 'Breadth-First Search'\n            },\n            {\n                name: 'Depth-First Search'\n            },\n            {\n                name: 'Dijkstra\\'s Algorithm'\n            },\n            {\n                name: 'Prim\\'s Algorithm'\n            },\n            {\n                name: 'Topological Sort'\n            },\n            {\n                name: 'Kruskal\\'s Sort'\n            },\n        ]\n    },\n\n];\n\n// Generate suggestions list based on user input matching to suggestion names.\nfunction getSuggestions(value) {\n    const inputValue = value.trim().toLowerCase();\n    if (inputValue.length === 0) {\n        return []\n    };\n\n    return dataStructures\n        .map(section => {\n            return {\n                category: section.category,\n                queries: section.queries.filter(query => query.name.toLowerCase().includes(inputValue))\n            };\n        })\n        .filter(section => section.queries.length > 0)\n\n}\n\n// Given a suggestion, return the name\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Given a section, return an array of corresponding queries\nconst getSectionSuggestions = section => {\n    return section.queries;\n};\n\n// Given a section, render its category name as bold text\nconst renderSectionTitle = section => (\n    <strong>\n        {section.category}\n    </strong>\n);\n\n// Given a suggestion (query), render its name\nconst renderSuggestion = suggestion => (\n    <div>\n        {suggestion.name}\n    </div>\n);\n\nclass Searchbar extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            suggestions: [],\n            enterDown: false,\n        };\n    }\n\n    // Update value on change to input box.\n    onChange = (event, { newValue }) => {\n       this.setState({\n           value: newValue\n       });\n    };\n\n    onKeyDown = (event) => {\n        if (event.key === 'Enter'){\n            this.setState({\n                enterDown: true,\n            });\n        }\n    };\n\n    // Repopulate suggestions whenever requested.\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n           suggestions: getSuggestions(value)\n        });\n    };\n\n    // Clean up function\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render(){\n        const { value, suggestions } = this.state;\n\n        const inputProps = {\n            placeholder: 'Search (e.g. \"AVL Tree\")',\n            value,\n            onChange: this.onChange,\n            onKeyDown: this.onKeyDown,\n        };\n\n        const enterDown = this.state.enterDown;\n\n        return(\n            <div>\n                <Autosuggest\n                    multiSection={true}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    getSectionSuggestions={getSectionSuggestions}\n                    renderSuggestion={renderSuggestion}\n                    renderSectionTitle={renderSectionTitle}\n                    inputProps={inputProps}\n                />\n                {enterDown ? <Redirect to={`/catalog/?view=all&term=${this.state.value}`}/> : ''}\n            </div>\n        );\n    }\n\n}\n\nexport default Searchbar;","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst LoginButton = styled.div`\n    margin-left: 10px; \n    border-radius: 50px;\n    width: 100px;\n    min-width: 20px;\n    text-align: center;\n    margin-top: 2px;\n    height: 28px;\n    background-color: #3C5B6F;\n`\n\nconst Buttontext = styled.div`\n    color: white;\n    padding: 4px;\n    font-family: Raleway, sans-serif;\n    font-weight: 500;\n    height: 100%;\n`\n\nfunction LoginRegister() {\n    return(\n        <Link to='/' style={{textDecoration:'None' , color:'black'}}>\n            <LoginButton>\n                <Buttontext>donate</Buttontext>\n            </LoginButton>\n        </Link>\n    );\n}\n\nexport default LoginRegister;","import React from \"react\";\nimport '../css/navbar.css'\nimport styled from 'styled-components'\nimport HomeButton from \"./homebutton\";\nimport NavigationButton from './navigationbutton';\nimport Searchbar from \"./searchbar\";\nimport LoginRegister from \"./login_register_button\";\n\nconst NavLayout = styled.div`\n    padding-top: 10px;\n    padding-left: 100px;\n    padding-right: 100px;\n    display: flex;\n    justify-content: flex-start;\n    background-color: #EFE7E2;\n    grid-template-columns: repeat(5,200px);\n    height: 50px;\n`\nconst SearchbarContainer = styled.div`\n    margin-left: auto;\n    margin-right: 10px;\n`\n\n\nfunction Navbar(){\n    return (\n        <nav role='navigation'>\n            <NavLayout>\n                <HomeButton className=\"homeLink\"/>\n                <NavigationButton nextPage=\"about\"/>\n                {/* <NavigationButton nextPage=\"explore\"/> */}\n                <NavigationButton nextPage=\"everything\"/>\n                <NavigationButton nextPage=\"premium\"/>\n                <SearchbarContainer>\n                    <Searchbar/>\n                </SearchbarContainer>\n                <LoginRegister/>\n            </NavLayout>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst ResponsiveGraphic = styled.div`\n    width: 100%;\n    box-sizing: border-box;\n`\n\nfunction HomeMainGraphic() {\n\n    return(\n        <ResponsiveGraphic>\n            <img style={{width: '100%'}} src={require(\"../../resources/images/logo_waves.svg\")} alt=\"logo on waves\"/>\n        </ResponsiveGraphic>\n    )\n}\n\nexport default HomeMainGraphic;","import React from 'react';\nimport styled from 'styled-components'\nimport HomeMainGraphic from \"./homemaingraphic\";\n\nconst WelcomeHeadline = styled.div`\n    font-family: Ramaraja;\n    font-size: calc(40px + 10 * ((100vw - 1130px) / (550)));\n`\n\nconst WelcomeBody = styled.div`\n    font-family: Raleway;\n    font-size: 16px;\n`\n\nconst MainWrapper = styled.div`\n    padding-top: 1rem;\n    padding-left: 6rem;\n    padding-right: 6rem;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(451px, 1fr));\n    grid-gap: 2rem;\n`\n\nconst WelcomeMessage =styled.div`\n    box-sizing: border-box;\n`\n\nfunction Mainlanding(){\n    return (\n        <MainWrapper>\n            <HomeMainGraphic/>\n            <WelcomeMessage>\n                <WelcomeHeadline>Welcome to DataStructs.</WelcomeHeadline>\n                <WelcomeBody>\n                    DataStructs is a beautiful, intuitive platform for vizualizing essential data structures and algorithms.\n                    <br/><br/>\n                    Each page includes buttery-smooth animations of common data structures that you can build and use <strong>without\n                    writing a single line of code.</strong><br/><br/>\n                    On top of that, DataStructs provides explanations and automated notes for every animation, so anyone can\n                    build an intuition each approach’s motivating ideas and asymptotic behavior. <br/><br/>\n                    Open the explore menu to browse the collection categorically, click everything to see 💯, or search for a\n                    specific data structure or concept in the search bar.\n                </WelcomeBody>\n            </WelcomeMessage>\n\n        </MainWrapper>\n    )\n}\n\nexport default Mainlanding;","import React from 'react';\nimport Navbar from \"../navbar\";\nimport styled from 'styled-components';\nimport Mainlanding from \"./mainlanding\";\nimport {motion} from 'framer-motion';\n\nconst HomeContainer = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n`\n\nfunction Home(props) {\n    return (\n            <HomeContainer>\n                <Navbar/>\n                <motion.div key=\"home\" variants={props.variants} transition={props.transition} initial=\"pageInit\" animate=\"pageIn\" exit=\"pageOut\">\n                    <Mainlanding/>\n                </motion.div>\n            </HomeContainer>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst MainGraphic = styled.div`\n\n`\n\nfunction AboutMainGraphic () {\n\n    return (\n        <MainGraphic>\n            <img src={require('../resources/images/darklogotag.svg')} alt='darklogo'/>\n        </MainGraphic>\n    )\n\n}\n\nexport default AboutMainGraphic;\n","import React from 'react';\nimport Navbar from './navbar';\nimport styled from 'styled-components';\nimport '../css/about.css';\nimport AboutMainGraphic from \"./aboutmaingraphic\";\nimport {motion} from \"framer-motion\";\n\nconst AboutContainer = styled.div`\n    height: 100vh;\n    background-color: #EFE7E2;\n`\nconst AboutHeadline = styled.div`\n    font-family: Ramaraja;\n    font-size: 80px;\n`\n\nconst MainWrapper = styled.div`\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding-left: 6rem;\n    padding-right: 6rem;\n`\n\nconst AboutMessage = styled.div`\n    grid-column: auto / span 2;\n`\n\nconst AboutBody = styled.div`\n    font-family: Raleway;\n    font-size: 16px;\n    font-weight: 500;\n`\n\nconst Link = styled.a`\n    text-decoration: none;\n    color: black;\n    hover: \n`\n\nfunction About (props){\n    return(\n        <AboutContainer>\n            <Navbar/>\n            <motion.div key=\"home\" variants={props.variants} transition={props.transition} initial=\"pageInit\" animate=\"pageIn\" exit=\"pageOut\">\n            <MainWrapper>\n                <AboutMessage>\n                    <AboutHeadline>\n                        About\n                    </AboutHeadline>\n                    <AboutBody>\n                        DataStructs is a beautiful, intuitive platform for vizualizing data structures and algorithms.<br/>\n                        <br/>\n                        As of August 2020, DataStructs is built with <Link style={{textDecoration: 'underline'}} href=\"https://reactjs.org\">React</Link>, animated with <Link style={{textDecoration: 'underline'}} href=\"https://greensock.com\">GreenSock</Link>, and continuously deployed via Netlify.\n                        <br/><br/>\n                        <Link className=\"hoverHighlit\" href='https://github.com/conormccormack/datastructs'>\n                            <i className=\"fab fa-github\"></i> View this project on <strong>Github</strong>\n                        </Link> @conormccormack/datastructs\n                    </AboutBody>\n                </AboutMessage>\n                <AboutMainGraphic/>\n            </MainWrapper>\n            </motion.div>\n        </AboutContainer>\n    )\n}\n\nexport default About;","import React from 'react';\nimport Navbar from './navbar';\nimport queryString from 'query-string';\nimport styled from 'styled-components';\nimport {motion} from \"framer-motion\";\nimport {Link} from \"react-router-dom\";\n\nconst CatalogContainer = styled.div`\n    background-color: #EFE7E2;\n    height: 100vh;\n`\nconst CatalogHeadline = styled.div`\n    font-family: Ramaraja;\n    font-size: 50px;\n    padding-left: 6rem;\n`\n\nconst Results = styled.div`\n    display: grid;\n    padding-left: 6rem;\n    padding-right: 6rem;\n`\n\nconst ResultCategory = styled.div`\n    font-size: 35px;\n    font-family: Raleway;\n    padding-top: 1rem;\n`\n\nconst ResultPage = styled.div`\n    font-size: 18px;\n`\n\nconst Pages = [\n    {\n        category: \"Trees\",\n        queries: [\n            {\n                name: 'AVL Tree',\n                url: 'tree/avl'\n            },\n            {\n                name: 'Binary Search Tree',\n                url: 'tree/bst'\n            },\n            {\n                name: 'Red-Black Tree',\n                url: 'tree/redblack'\n            },\n            {\n                name: 'Splay Tree',\n                url: 'tree/splay'\n            },\n        ]\n    },\n    {\n        category: \"Heaps\",\n        queries: [\n            {\n                name: 'Binary Heap',\n                url: 'heap/binheap'\n            },\n            {\n                name: 'Fibonacci Heap',\n                url: 'heap/fibonacci'\n            },\n        ],\n    },\n    {\n        category: \"Basics\",\n        queries: [\n            {\n                name: 'Linked List',\n                url: 'linkedlist',\n            },\n            {\n                name: 'Stack',\n                url: 'stack',\n            },\n            {\n                name: 'Queue',\n                url: 'queue',\n            },\n        ],\n    },\n    {\n        category: \"Sorting Algorithms\",\n        queries: [\n            {\n                name: 'Bubble Sort',\n                url: 'sort/bubble',\n            },\n            {\n                name: 'Selection Sort',\n                url: 'sort/selection',\n            },\n            {\n                name: 'Insertion Sort',\n                url: 'sort/insertion',\n            },\n            {\n                name: 'Merge Sort',\n                url: 'sort/merge',\n            },\n            {\n                name: 'Quick Sort',\n                url: 'sort/quick',\n            },\n            {\n                name: 'Radix Sort',\n                url: 'sort/radix',\n            },\n            {\n                name: 'Heap Sort',\n                url: 'sort/heap',\n            },\n        ],\n    },\n    {\n        category: \"Graph Algorithms\",\n        queries: [\n            {\n                name: 'Breadth-First Search',\n                url: 'graph/bfs',\n            },\n            {\n                name: 'Depth-First Search',\n                url: 'graph/dfs',\n            },\n            {\n                name: 'Dijkstra\\'s Algorithm',\n                url: 'graph/dijkstras',\n            },\n            {\n                name: 'Prim\\'s Algorithm',\n                url: 'graph/prims',\n            },\n            {\n                name: 'Topological Sort',\n                url: 'graph/topological',\n            },\n            {\n                name: 'Kruskal\\'s Sort',\n                url: 'graph/kruskals',\n            },\n        ]\n    },\n\n];\n\nconst resultsByCategory = (query, filt, db) => {\n    let results = [];\n    for (let i = 0; i < db.length; i++) {\n        let res = [];\n        if (filt !== 'all' && db[i].category.toLowerCase() !== filt.toLowerCase()) continue;\n        for (let j = 0; j < db[i].queries.length; j++) {\n            if ((filt === 'all' && query === '') || db[i].queries[j].name.toLowerCase().includes(query.toLowerCase())){\n                res.push(db[i].queries[j]);\n            }\n        }\n        if (res.length > 0) results.push({category: db[i].category, results: res});\n    }\n    return resultsToHTML(results);\n};\n\nconst resultsToHTML = (results) => {\n    if (results.length === 0) return ('There are no items matching your search.');\n    else {\n        return results.map(cat =>\n                <div>\n                    <ResultCategory>{cat.category}</ResultCategory>\n                    {cat.results.map(result =>\n                        <ResultPage><Link style={{ color:'black'}} to={`/${result.name}`}>{result.name}</Link></ResultPage>)}\n                </div>\n        )\n    };\n};\n\nfunction Catalog(props){\n    const query = queryString.parse(props.location.search);\n    const SearchResults = resultsByCategory(query.term ? query.term : '', query.view, Pages);\n\n    return(\n        <CatalogContainer>\n            <Navbar/>\n                <motion.div key=\"home\" variants={props.variants} transition={props.transition} initial=\"pageInit\" animate=\"pageIn\" exit=\"pageOut\">\n                {query.term ? <CatalogHeadline>Search results for {query.term}:</CatalogHeadline> :\n                    <CatalogHeadline>This is the catalog filtered by {query.view}.</CatalogHeadline>\n                }\n                <Results>\n                    {SearchResults}\n                </Results>\n            </motion.div>\n        </CatalogContainer>\n    )\n}\n\nexport default Catalog;","import React from 'react';\nimport styled from 'styled-components';\nimport Navbar from \"./navbar\";\nimport {motion} from \"framer-motion\";\n\nconst PremiumContainer = styled.div`\n    background-color: #EFE7E2;\n    height: 100vh;\n`\nconst PremiumHeadline = styled.div`\n    font-family: Ramaraja;\n    font-size: 80px;\n    padding-left: 100px;\n`\n\nfunction Premium(props){\n    return(\n        <PremiumContainer>\n            <Navbar/>\n            <motion.div key=\"home\" variants={props.variants} transition={props.transition} initial=\"pageInit\" animate=\"pageIn\" exit=\"pageOut\">\n             <PremiumHeadline>Premium</PremiumHeadline>\n            </motion.div>\n        </PremiumContainer>\n    )\n}\n\nexport default Premium;","import React from 'react';\nimport { gsap } from 'gsap';\nimport '../css/bst.css';\nimport { Transition } from 'react-transition-group';\n\nconst RefNode = React.forwardRef((props, ref) => {\n    return(\n        <Transition \n            key={props.key}\n            in={true}\n            mountOnEnter\n            unmountOnExit\n            addEndListener={(node, done) => {\n                gsap.from(\n                    node,\n                    .5,\n                    {\n                        scale: 0, \n                        ease: 'back.out(2)',\n                        onComplete: done,\n                    }\n                )\n            }}\n        >   \n            <div ref={ref} id={`node${props.node.id}`} style={{ marginLeft: '-60px' }}  className='bstnode'>{props.node.value}</div>\n       </Transition>\n    )\n});\n\nexport default RefNode;","import React, { useRef, useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\nimport '../css/bst.css';\nimport styled from 'styled-components';\nimport RefNode from './refnode';\nimport { TransitionGroup } from 'react-transition-group';\n\nconst TreeContainer = styled.div`\n    margin-left: 60px;\n    display: flex;\n    justify-content: center;\n`\n\nconst PageContainer = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    height: 100vh;\n    width: 100vw;\n    padding: 2rem;\n    background: #EFE7E2;\n`\n\nconst ControlContainer = styled.div`   \n`\n\nclass Node {\n    constructor (value, level, id){\n        this.value = value;\n        this.left = null;\n        this.right = null;\n        this.level = level;\n        this.parent = null;\n        this.id = id;\n        this.line = null;\n        this.isNew = true;\n    }\n}\n\nclass BinarySearchTree {\n    constructor() {\n        this.root = null;\n    }\n    updateLevels(root, level){\n        root.level = level;\n        if (root.right !== null) this.updateLevels(root.right, level + 1);\n        if (root.left !== null) this.updateLevels(root.left, level + 1 );\n    }\n    getTreeHeight(node, total){ \n        const left = node.left !== null ? this.getTreeHeight(node.left, total) + 1 : 0;\n        const right = node.right !== null ? this.getTreeHeight(node.right, total) + 1 : 0;\n        return total + Math.max(left, right);\n    }\n    \n    getInOrderArray(node, array){\n        if (!node) return [];\n        if (node.left !== null) this.getInOrderArray (node.left, array);\n        array.push(node);\n        if (node.right !== null) this.getInOrderArray (node.right, array);\n        return array;\n    }\n\n    subTreeSize(node){\n        if (node === null) return 0;     \n        const left = node.left ? this.subTreeSize(node.left) : 0;\n        const right = node.right ? this.subTreeSize(node.right) : 0;\n        return left + right + 1;\n    }\n\n    insert(value, count) {\n        var newNode = new Node (value, 0, count);\n        if (this.root === null) {\n            this.root = newNode;\n        }\n        else { \n            newNode.level += 1;\n            this.insertNode(this.root, newNode);\n        }\n        return newNode;\n    }\n\n    insertNode(root, newNode){  \n        if (newNode.value < root.value){\n            if (root.left !== null) {\n                newNode.level = newNode.level + 1;\n                this.insertNode(root.left, newNode);\n            } else { \n                root.left = newNode; \n                newNode.parent = root;\n            }\n        } else if (newNode.value >= root.value){\n            if (root.right !== null) {\n                newNode.level = newNode.level + 1;\n                this.insertNode(root.right, newNode);\n            } else { \n                root.right = newNode; \n                newNode.parent = root;\n            }\n        }\n    }\n\n    removeRecurse(root, value){\n        if (root === null) {\n            return false;\n        } else if (value < root.value) {\n            return this.removeRecurse(root.left, value);\n        } else if (value > root.value) {\n            return this.removeRecurse(root.right, value);\n        } else {\n            this.deleteNode(root);\n            return true;\n        }  \n    }\n\n    deleteNode(node){\n        let child_of_type = (node.parent !== null) ? (node.parent.right === node) ? 'right' : 'left' : 'root';\n        let replacement = (node.left === null && node.right === null) ? null : (node.left === null) ? node.right : node.left;\n        if (node.left !== null && node.right !== null){\n            const swap = this.findLeftmost(node.right);\n            this.deleteNode(swap);\n        } else {\n            if (child_of_type !== 'root') {}\n            else if (replacement) {}\n\n            if (child_of_type === 'right') node.parent.right = replacement;\n            else if (child_of_type === 'left') node.parent.left = replacement;\n            else this.root = replacement;\n            if (replacement) replacement.parent = node.parent;\n        }\n\n        if (this.root) this.updateLevels(this.root, 0);\n    }\n\n    findLeftmost(root){\n        return root.left === null ? root : this.findLeftmost(root.left);\n    }\n}\n\n/* \n** It's important to separate animations that insert/delete from tree since\n** we need to first animate removing nodes before they are allowed to leave the DOM.\n\n** First, we handle actually inserting/removing the data from the data structure.\n** Then, insert/removeCount are changed, calling the corresponding useEffect hook.\n*/\n\nconst Reftree = React.memo(() => {\n    const nodeRef = useRef([]);\n    const bst = useRef(new BinarySearchTree());\n    const [ nodeData, setNodeData ] = useState([]);\n    \n    const [ removeCount, setRemoveCount ] = useState(0);\n    const [ insertCount, setInsertCount ] = useState(0);\n    const [ count, setCount ] = useState(0);\n    \n    const [ height, setHeight ] = useState(-1);\n\n    const [ inputValue, setInputValue ] = useState('');\n    const [ removeValue, setRemoveValue ] = useState('');\n    const [ message, setMessage ] = useState('');\n\n    const HORIZONTAL_SPACING = 50;\n    const VERTICAL_SPACING = 80;\n    //const NODE_RADIUS = 30;\n\n    // useEffect(() => {        \n    //     console.log('Insert count useEffect()...')\n    //     if (bst.current.root === null) return;\n    //     setHeight(bst.current.getTreeHeight(bst.current.root, 0));\n    //     console.log(nodeData, nodeRef);\n    //     for (let i = 0; i < nodeData.length; i++){\n    //         gsap.to(\n    //             nodeRef.current[i],\n    //             .5,\n    //             { delay: nodeData[i].isNew ? .4 : 0, y: (nodeData[i].level) * VERTICAL_SPACING , x: HORIZONTAL_SPACING * i - (bst.current.subTreeSize(bst.current.root.left) * HORIZONTAL_SPACING)},\n    //         );\n    //         if (nodeData[i].isNew){\n    //             gsap.from(\n    //                 nodeRef.current[i],\n    //                 .4,\n    //                 { scale: 0, ease: 'back.out(2)'},\n    //             )\n    //             nodeData[i].isNew = false;  \n    //         }\n    //     }\n\n    // }, [ insertCount, nodeData ])\n\n    const handleInputSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue !== '' && !isNaN(inputValue)) {\n            bst.current.insert(parseFloat(inputValue), insertCount);\n            setNodeData(bst.current.getInOrderArray(bst.current.root, []));\n            setInsertCount(insertCount + 1);\n            setCount(count + 1);\n            setMessage(`${inputValue} inserted into the tree.`);\n        } else {\n            setMessage('Please enter a number (e.g. 32, 2.7).')\n        }\n        setInputValue('');\n    }\n\n    // useEffect(() => {\n    //     console.log(bst.current);\n    //     console.log({nodeData});\n    //     console.log({nodeRef});\n    //     for (let i = 0; i < nodeData.length; i++){\n    //         gsap.to(\n    //             nodeRef.current[i],\n    //             .5,\n    //             { delay: nodeData[i].isNew ? .4 : 0, y: (nodeData[i].level) * VERTICAL_SPACING , x: HORIZONTAL_SPACING * i - (bst.current.subTreeSize(bst.current.root.left) * HORIZONTAL_SPACING)},\n    //         );\n    //         // if (nodeData[i].isNew){\n    //         //     gsap.from(\n    //         //         nodeRef.current[i],\n    //         //         .4,\n    //         //         { scale: 0, ease: 'back.out(2)'},\n    //         //    )\n    //         //     nodeData[i].isNew = false;  \n    //         // }\n    //     }\n    // }, [ removeCount, nodeDat ] )\n\n    const handleRemoveSubmit = (e) => {\n        e.preventDefault();\n        if (removeValue !== '' && !isNaN(removeValue)) {\n            const success = bst.current.removeRecurse(bst.current.root, parseFloat(removeValue));\n            setNodeData(bst.current.getInOrderArray(bst.current.root, []));\n            success && setMessage('');\n            !success ? bst.current.root === null ? setMessage('Tree is empty.') : setMessage(`${removeValue} not in the tree.`)\n            : setMessage(`${removeValue} removed from the tree.`);\n            if (success) setRemoveCount(removeCount + 1); \n        } else {\n            setMessage('Please enter a number (e.g. 32, 2.7).');\n        }\n        setRemoveValue('');\n    }\n\n    return (\n        <PageContainer>\n            <TreeContainer>\n                <TransitionGroup>\n                    {nodeData.map( (node, i ) =>\n                        <RefNode key={node.id} node={node} ref={el => nodeRef.current.includes(el) ? nodeRef.current[nodeRef.current.indexOf(el)] = el : nodeRef.current[i] = el}/>\n                    )}\n                </TransitionGroup>\n            </TreeContainer>\n            <ControlContainer>\n                <form onSubmit={handleInputSubmit}>\n                    <input type='text' value={inputValue} placeholder='36' onChange={e => { setInputValue(e.target.value) } }/>\n                </form>\n                <form onSubmit={handleRemoveSubmit}>\n                    <input type='text' value={removeValue} placeholder='72' onChange={e => { setRemoveValue(e.target.value) } }/>\n                </form>\n                <div>Count: <strong>{count}</strong></div>\n                <div>Height: <strong>{bst.current.root ? height + 1 : 0}</strong></div>\n                <div>{message}</div>\n            </ControlContainer>\n        </PageContainer>\n    );\n\n});\n\n\n\nexport default Reftree;\n\n","/* Summary:\n*  The following is a React component that will never update after it has mounted.\n*  This allows for the use of vanilla JavaScript to directly manipulate the DOM.\n*  The binary tree is initialized as part of the component state so that the component\n*  can readily access the tree data. The tree is maintained with vanilla JavaScript, however,\n*  and is animated using Anime.js.\n*\n*  The animation is implemented as an Anime timeline, which is built with an\n*  in-order traversal of the nodes of the tree followed by its edges. The X position\n*  of each node and its edges is based on size of the container and the immediate \n*  successors of each node. There is a fixed distance between each node and its pecessor,\n*  defined by HORIZONTAL_SPACING. Somewhat similarly, each level of the tree is seperated\n*  by the VERTICAL_SPACING constant. \n*/\n\nimport React, { Component } from 'react';\nimport anime from 'animejs';\nimport '../css/bst.css';\nimport styled from 'styled-components';\n\nconst PageWrapper = styled.div`\n    padding-left: 6rem;\n    padding-right: 6rem;\n    padding-top: 2rem;\n    height: 80vh;\n    display: grid;\n    grid-template-columns: 3fr 1fr;\n`\n\nconst NodeContainer = styled.div`\n    height: 100%;\n    width: 100%\n`\n\nconst HORIZONTAL_SPACING = 40;\nconst NODE_RADIUS = 30;\nconst VERTICAL_SPACING = 70;\nconst NUM_STARTING_NODE = 11;\nlet TRAVERSE_DURATION = 500;\nlet shift_x;\nlet resizeTimer;\nlet traverseCount = 0;\nlet traverseOn = true;\nlet allowDuplicate = false; \n\nlet formatTimeline = anime.timeline({\n    autoplay: false,\n    \n});\n\nclass Node {\n    constructor (value, level, id){\n        this.value = value;\n        this.left = null;\n        this.right = null;\n        this.level = level;\n        this.parent = null;\n        this.id = id;\n        this.line = null;\n    }\n}\n\nclass BinarySearchTree {\n    constructor() {\n        this.root = null;\n        this.numActiveNodes = 0;\n        /* Map which stores the next x position of each node. Used to calculate\n        ** where points of edges should move before the animation is executed */\n        this.x_distances = new Map();\n    }\n\n    incrementActiveNodes(){\n        this.numActiveNodes += 1;\n    }\n\n    updateLevels(root, level){\n        root.level = level;\n        if (root.right !== null) this.updateLevels(root.right, level + 1);\n        if (root.left !== null) this.updateLevels(root.left, level + 1 );\n    }\n    getTreeHeight(node, total){ \n        const left = node.left !== null ? this.getTreeHeight(node.left, total) + 1 : 0;\n        const right = node.right !== null ? this.getTreeHeight(node.right, total) + 1 : 0;\n        return total + Math.max(left, right);\n    }\n\n    // Insert node into tree and update heights map.\n    insert(value, count) {\n        var newNode = new Node (value, 0, count);\n        if (this.root === null) {\n            this.root = newNode;\n            addMessageToLog(`Tree empty: inserting ${value} as root.`, 'end');\n        }\n        else { \n            newNode.level += 1;\n            this.insertNode(this.root, newNode);\n        }\n        return newNode;\n    }\n\n    insertNode(root, newNode){  \n        if (traverseOn) addTraverseStep(root, 0);\n        if (newNode.value < root.value){\n            if (root.left !== null) {\n                newNode.level = newNode.level + 1;\n                addMessageToLog(`${newNode.value} < ${root.value}, search left.`);\n                this.insertNode(root.left, newNode);\n            } else { \n                root.left = newNode; \n                newNode.parent = root;\n                addMessageToLog(`${newNode.value} < ${root.value}, insert as left leaf.`, 'end');\n            }\n        } else if (newNode.value >= root.value){\n            if (root.right !== null) {\n                newNode.level = newNode.level + 1;\n                addMessageToLog(`${newNode.value} >= ${root.value}, search right.`);\n                this.insertNode(root.right, newNode);\n            } else { \n                root.right = newNode; \n                newNode.parent = root;\n                addMessageToLog(`${newNode.value} >= ${root.value}, insert as right leaf.`, 'end');\n            }\n        }\n    }\n\n    removeRecurse(root, value){\n        if (root !== null && traverseOn) addTraverseStep(root, 0);\n        if (root === null) {\n            addMessageToLog(`${value} not found.`, 'end');\n            setErrorMessage(`${value} is not in the tree!`);\n            return false;\n        } else if (value < root.value) {\n            addMessageToLog(`${value} < ${root.value}, search left.`);\n            return this.removeRecurse(root.left, value);\n        } else if (value > root.value) {\n            addMessageToLog(`${value} >= ${root.value}, search right.`);\n            return this.removeRecurse(root.right, value);\n        } else {\n            this.deleteNode(root);\n            addMessageToLog(`Found ${value}: removing ${value} from tree.`, 'end');\n            setErrorMessage('');\n            return true;\n        }  \n    }\n\n    deleteNode(node){\n        let child_of_type = (node.parent !== null) ? (node.parent.right === node) ? 'right' : 'left' : 'root';\n        let replacement = (node.left === null && node.right === null) ? null : (node.left === null) ? node.right : node.left;\n        if (node.left !== null && node.right !== null){\n            const swap = this.findLeftmost(node.right);\n            addTraverseStep(swap, -1);\n            node.value = swap.value;\n            formatTimeline.add({\n                targets: document.getElementById(`frontnode${node.id}`),\n                innerHTML: node.value,\n                easing: 'easeOutCubic',\n                round: 1,\n                duration: 500,\n            }, (traverseCount - 1) * TRAVERSE_DURATION)\n            this.deleteNode(swap);\n        } else {\n            if (child_of_type !== 'root') removeElementFromDOM(`path${node.id}`);\n            else if (replacement) removeElementFromDOM(`path${replacement.id}`);\n\n            if (child_of_type === 'right') node.parent.right = replacement;\n            else if (child_of_type === 'left') node.parent.left = replacement;\n            else this.root = replacement;\n            if (replacement) replacement.parent = node.parent;\n            removeElementFromDOM(`node${node.id}`);\n        }\n\n        if (this.root) this.updateLevels(this.root, 0);\n    }\n\n    findLeftmost(root){\n        return root.left === null ? root : this.findLeftmost(root.left);\n    }\n}\n\nfunction addTraverseStep(node, shift_order){\n    formatTimeline.add({\n        targets: `#node${node.id}`,\n        keyframes: [\n            { scale: 1.05, translateX: `-=${NODE_RADIUS}`, translateY: `-=${NODE_RADIUS*.05}`},\n            { scale: 1, translateX: `+=${NODE_RADIUS}`, translateY: `+=${NODE_RADIUS*.05}`},\n        ],\n        easing: 'easeInOutBack',\n        duration: TRAVERSE_DURATION,\n    }, (traverseCount + shift_order) * TRAVERSE_DURATION);\n    formatTimeline.add({\n        targets: `#frontnode${node.id}`,\n        keyframes: [\n            { background: '#3C5B6F' },\n            { background: ' ' },\n        ],\n        easing: 'easeInOutBack',\n        duration: TRAVERSE_DURATION,\n    }, (traverseCount + shift_order) * TRAVERSE_DURATION);\n    if (node.parent !== null && shift_order === 0) {\n        formatTimeline.add({\n            targets: `#path${node.id}`,\n            keyframes: [\n                { stroke: '#3C5B6F' },\n                { stroke: '#DEAAFF' },\n            ],\n            duration: TRAVERSE_DURATION,\n            easing: 'easeInOutBack',\n        }, traverseCount * TRAVERSE_DURATION - (TRAVERSE_DURATION/2));\n    }\n    traverseCount += 1;\n}\n\nfunction removeElementFromDOM(id) {    \n    var toRemove = document.getElementById(id);\n    if (id === null) return;\n    formatTimeline.add({\n        targets: toRemove,\n        opacity: 0,\n        duration: 600,\n        easing: 'easeOutExpo',\n        delay: id.includes('line') ? 150 : 0,\n        complete: function(anim){\n            toRemove.remove();\n        },\n    }, traverseCount * TRAVERSE_DURATION);\n}\n\nfunction addNodeToDOM(value, count) {\n    let node = document.createElement(\"div\");\n    node.classList.add('bstnode')\n    node.setAttribute('id', `node${count}`);\n    node.setAttribute('style', `float: left;`);\n    let frontHighlight = document.createElement('div');\n    frontHighlight.classList.add('front-node');\n    frontHighlight.setAttribute('id', `frontnode${count}`);\n    let text = document.createTextNode(value);\n    frontHighlight.appendChild(text);\n    node.appendChild(frontHighlight);\n    document.getElementById(\"nodecontainer\").appendChild(node);\n}\n\n// Given an element selector, return the pixel midpoint of its width dimension.\nfunction getWidthMidpoint(selector) {\n    return (selector.getBoundingClientRect().width / 2);\n}\n\n// Returns length of in-order traversal from smallest element to root.\nfunction size(root){\n    if (root === null) return 0;     \n    const left = root.left ? size(root.left) : 0;\n    const right = root.right ? size(root.right) : 0;\n    return left + right + 1;\n}\n\nfunction addMessageToLog(message, options){\n    formatTimeline.add({\n        duration: TRAVERSE_DURATION,\n        begin: function (){\n            let p = document.createElement('div');\n            p.setAttribute('className', 'log');\n            p.classList.add('log');\n            if (options) {\n                if (options === 'end') p.classList.add('log-border-bottom');\n            }\n            p.appendChild(document.createTextNode(message));\n            let logs = document.getElementById('logs');\n            logs.appendChild(p);\n            logs.scrollTop = logs.scrollHeight;\n        }\n    }, traverseOn ? (traverseCount - 1) * TRAVERSE_DURATION : 0);\n    formatTimeline.add({\n        duration: TRAVERSE_DURATION,\n\n    }, traverseOn ? (traverseCount - 1) * TRAVERSE_DURATION : 0);\n}\n\nfunction setErrorMessage(message){\n    document.getElementById('error-message').innerHTML = message;\n}\n\nasync function formatBinaryTree(tree){\n    toggleFormDisable();\n    buildNodeTimeline(tree.root, tree);\n    buildEdgeTimeline(tree.root, tree);\n    formatTimeline.play();\n    await formatTimeline.finished;\n    toggleFormDisable();\n    formatTimeline = anime.timeline({});\n    return;\n}\n\nfunction buildEdgeTimeline(root, tree){\n    if (root.left !== null) buildEdgeTimeline(root.left, tree);\n    if (root.parent !== null){\n        const x1 = tree.x_distances.get(`node${root.parent.id}`); \n        const y1 = root.parent.level * VERTICAL_SPACING + NODE_RADIUS;\n        const x2 = tree.x_distances.get(`node${root.id}`);\n        const y2 = root.level * VERTICAL_SPACING + NODE_RADIUS;\n        const curr_opacity = parseFloat(document.getElementById(`path${root.id}`).getAttribute('opacity'));\n        const isNew = curr_opacity > 0.7 ? false : true;\n        formatTimeline.add({\n            targets: `#path${root.id}`,\n            d: `M ${x1}, ${y1} L ${x2}, ${y2}`,\n            opacity: { value: '1.0', easing: 'easeInSine', delay: isNew ? 600: 0, duration: isNew ? 200 : 0 },\n            stroke: { value: '#DEAAFF', delay: isNew ? 800 : 0 },\n            easing: 'easeInOutExpo',\n        }, traverseCount * TRAVERSE_DURATION);\n    }\n    if (root.right !== null) buildEdgeTimeline(root.right, tree);\n}\n\nfunction buildNodeTimeline(root, tree){\n    if (root.left !== null) buildNodeTimeline(root.left, tree);\n    const node = document.getElementById(`node${root.id}`);\n    const x = shift_x - NODE_RADIUS;\n    const isNew = root.parent !== null && root.line === null ? true : false;\n    tree.x_distances.set(`node${root.id}`, x );\n    root.parent !== null && root.line === null && addPathToDom(root);\n    root.line = root.line === null && `line${root.id}`;\n    if (isNew){\n        formatTimeline.add({\n            targets: `#node${root.id}`,\n            marginLeft: { value: `${-node.getBoundingClientRect().width}px`, duration: 0 },\n            keyframes: [\n                { scale: isNew ? 0 : 1, duration: 0 },\n                { translateX: isNew ? 0 : shift_x, translateY: root.level * VERTICAL_SPACING,  scale: 1, duration: 800 },\n                { translateX: shift_x, translateY: root.level * VERTICAL_SPACING, delay: 200, duration: 800 }\n            ],\n            easing: 'easeInOutExpo',\n        }, traverseCount * TRAVERSE_DURATION);\n    } else {\n        formatTimeline.add({\n            targets: `#node${root.id}`,\n            marginLeft: { value: `${-node.getBoundingClientRect().width}px`, duration: 0 },\n            keyframes: [\n                { scale: isNew ? 0 : 1, duration: 0 },\n                { translateX: isNew ? 0 : shift_x, translateY: root.level * VERTICAL_SPACING,  scale: 1, duration: 800 },\n                { translateX: shift_x, translateY: root.level * VERTICAL_SPACING, delay: 200, duration: 800 }\n            ],\n            easing: 'easeInOutExpo',\n        }, traverseCount * TRAVERSE_DURATION);\n    }\n\n    shift_x += HORIZONTAL_SPACING;\n\n    if (root.right !== null) buildNodeTimeline(root.right, tree);\n}\n\n// Given child node, create path from child to parent, add to DOM.\nfunction addPathToDom(child){\n    if (child.parent === null) return;\n    let svg = document.getElementById('svg-line');\n    const parent_selector = document.getElementById(`node${child.parent.id}`);\n    const child_selector = document.getElementById(`node${child.id}`);\n    const container = document.getElementById(`nodecontainer`);\n\n    const x1 = (parent_selector.getBoundingClientRect().x + parent_selector.getBoundingClientRect().right)/2 - container.getBoundingClientRect().x;\n    const y1 =  parent_selector.getBoundingClientRect().bottom - container.getBoundingClientRect().y - NODE_RADIUS;\n    const x2 = (child_selector.getBoundingClientRect().x + child_selector.getBoundingClientRect().right)/2 - container.getBoundingClientRect().x;\n    const y2 = child_selector.getBoundingClientRect().y - container.getBoundingClientRect().y + NODE_RADIUS;\n\n    let path = document.createElementNS('http://www.w3.org/2000/svg','path');\n    path.setAttribute('id', `path${child.id}`);\n    path.setAttribute('d', `M ${x1}, ${y1} L ${x2}, ${y2} `);\n    path.setAttribute('stroke', '#3C5B6F');\n    path.setAttribute('stroke-width', '3px');\n    path.setAttribute('opacity', '0.0');\n    svg.appendChild(path);\n}\n\nfunction toggleFormDisable(){\n    document.getElementById('input-field').disabled =  !document.getElementById('input-field').disabled;\n    document.getElementById('remove-field').disabled = !document.getElementById('remove-field').disabled;\n    document.getElementById('input-button').disabled = !document.getElementById('input-button').disabled;\n    document.getElementById('remove-button').disabled = !document.getElementById('remove-button').disabled;\n    document.getElementById('multi-field').disabled = !document.getElementById('multi-field').disabled;\n    document.getElementById('multi-button').disabled = !document.getElementById('multi-button').disabled;\n}\n\nclass AnimeTest extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n            removeValue: '',\n            bst: new BinarySearchTree(),\n            multiInput: '',\n            count: 0,\n        };\n        this.handleInputSubmit = this.handleInputSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleRemoveChange = this.handleRemoveChange.bind(this);\n        this.handleRemoveSubmit = this.handleRemoveSubmit.bind(this); \n        this.toggleAllowDuplicate = this.toggleAllowDuplicate.bind(this);\n        this.calculateShiftX = this.calculateShiftX.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.updateActiveNodeCount = this.updateActiveNodeCount.bind(this);\n        this.handleMultiSubmit = this.handleMultiSubmit.bind(this);\n        this.handleMultiChange = this.handleMultiChange.bind(this);\n        this.parseMulti = this.parseMulti.bind(this);\n    }\n\n    updateActiveNodeCount(){\n        document.getElementById('active-node-count').innerHTML = `Number of Nodes: <strong>${this.state.bst.numActiveNodes}</strong>`;\n    }\n\n    updateTreeHeight(){\n        document.getElementById('tree-height').innerHTML = \n        `Tree Height: <strong>${this.state.bst.root !== null ? this.state.bst.getTreeHeight(this.state.bst.root, 0) + 1 : 0}</strong>`;\n    }\n\n    handleInputChange(event) {\n        this.setState({ inputValue: parseFloat(event.target.value) });\n    }\n\n    handleRemoveChange(event) {\n        this.setState({ removeValue: parseFloat(event.target.value) });\n    }\n    \n    handleMultiChange(event){\n        this.setState({ multiInput: event.target.value});\n    }\n\n    async handleInputSubmit(event) {\n        event.preventDefault();\n        if (this.state.inputValue === '' || isNaN(this.state.inputValue)) {\n            setErrorMessage('<p>Please enter an number (e.g. 32, 2.7).<p>')\n            return;\n        }\n        setErrorMessage('');\n        this.state.bst.insert(this.state.inputValue, this.state.count);\n        addNodeToDOM(this.state.inputValue, this.state.count);\n        shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n        await formatBinaryTree(this.state.bst);\n        traverseCount = 0;\n        this.setState({ count: this.state.count + 1, inputValue: '' });\n        this.state.bst.incrementActiveNodes();\n        this.updateActiveNodeCount();\n        this.updateTreeHeight();\n        document.getElementById('input-field').focus();\n    }\n\n    async handleRemoveSubmit(event) {\n        event.preventDefault();\n        if (this.state.removeValue === '' || isNaN(this.state.removeValue)) {\n            setErrorMessage('<p>Please enter an number (e.g. 32, 2.7).<p>');\n            return;\n        }\n        const success = this.state.bst.removeRecurse(this.state.bst.root, this.state.removeValue);\n        if (this.state.bst.root !== null) {\n            shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n            await formatBinaryTree(this.state.bst);\n        };\n        if (success) this.state.bst.numActiveNodes -= 1;\n        this.setState({removeValue: ''});\n        this.updateActiveNodeCount();\n        this.updateTreeHeight();\n        document.getElementById('remove-field').focus();\n        traverseCount = 0;\n    }\n\n    parseMulti(){\n        const multiInput = this.state.multiInput.toLowerCase();\n        let instructions = [];\n        for (let idx = 0; idx < multiInput.length; idx++){\n            if (!isNaN(multiInput[idx]) && multiInput[idx] !== ' ' && multiInput[idx] !== '') {\n                \n            } else if (multiInput[idx] === 'r'){\n\n            }  else if (multiInput[idx] === 'a' || (multiInput[idx] === 'd')){\n                const open_brack = multiInput.substring(idx).indexOf('[') + idx;\n                const close_brack = multiInput.substring(idx).indexOf(']') + idx;\n\n                console.log(multiInput.substring(idx + 1, idx + 3));\n                if (open_brack !== -1 && close_brack === -1) throw Error('Expected ]');\n                else if (open_brack === -1 && close_brack !== -1) throw Error('Expected ['); \n                else if (open_brack === -1 && close_brack === -1) throw Error('Expected [...]');\n                else if (multiInput.substring(idx + 1, idx + 3) !== 'dd' && multiInput.substring(idx + 1, idx + 3) !== 'el') \n                    throw Error('Unknown command');\n                \n                if (open_brack !== -1 && close_brack !== -1){\n                    let add_group = multiInput.substring(open_brack + 1, close_brack).split(/\\s*(\\s|,)\\s*/)\n                            .filter(el => !isNaN(parseFloat(el)))\n                                .map(el => multiInput[idx] === 'a' ? `${el}` : `d${el}`);\n                    instructions = instructions.concat(add_group);\n                }\n                idx = close_brack;\n            }\n            \n        }\n        return instructions;\n    }\n\n    async handleMultiSubmit(event){\n        event.preventDefault();\n        \n        var newNodes;\n\n        try { newNodes = this.parseMulti();\n        } catch (error){\n            console.error(error)\n        }\n        \n        for (const value of newNodes){\n            if (value.toString().includes('d')) {\n                const success = this.state.bst.removeRecurse(this.state.bst.root, parseFloat(value.toString().substring(1)));\n                if (success) this.state.bst.numActiveNodes -= 1;\n            }\n            else {\n                this.state.bst.insert(parseFloat(value), this.state.count);\n                addNodeToDOM(value, this.state.count);\n                this.state.bst.numActiveNodes += 1;\n                this.setState({count: this.state.count + 1});\n            }\n            shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n            await formatBinaryTree(this.state.bst);\n            traverseCount = 0;\n            this.updateActiveNodeCount();\n            this.updateTreeHeight();\n        }\n        this.setState({multiInput: ''});\n        document.getElementById('multi-field').focus();\n    }\n\n    calculateShiftX(nodeContainer) {\n        const rightOverflow = Math.min(0, getWidthMidpoint(nodeContainer) - size(this.state.bst.root.right) * HORIZONTAL_SPACING - NODE_RADIUS);\n        return Math.max(NODE_RADIUS, getWidthMidpoint(nodeContainer) - size(this.state.bst.root.left) * HORIZONTAL_SPACING + rightOverflow);\n    }\n\n\n    componentDidMount(){\n        window.addEventListener('resize', this.onResize);\n        shift_x = getWidthMidpoint(document.getElementById('nodecontainer'));\n        this.toggleTraverseOn();\n        const randomTree = [...Array(NUM_STARTING_NODE)].map(() => Math.floor(Math.random() * 999 + 1));\n        const sortedTree = Array.from(randomTree).sort();\n        const median = sortedTree[Math.floor(sortedTree.length/2)];\n        const medianIndex = randomTree.indexOf(median);\n        randomTree[medianIndex] = randomTree[0];\n        randomTree[0] = median;\n        randomTree.forEach( (value, index) => {\n            this.state.bst.insert(parseFloat(value), this.state.count + index);\n            addNodeToDOM(value, this.state.count + index);\n            shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n            this.state.bst.incrementActiveNodes();\n        });\n        shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n        formatBinaryTree(this.state.bst);\n        this.updateActiveNodeCount();\n        this.updateTreeHeight();\n        this.setState({count: this.state.count + randomTree.length});\n        this.toggleTraverseOn();\n    }\n    \n    toggleTraverseOn(){ traverseOn = !traverseOn; }\n    toggleAllowDuplicate() { allowDuplicate = !allowDuplicate; }\n\n    handleIntervalChange(event){ TRAVERSE_DURATION = 1500 - event.target.value; }\n\n    onResize(){\n        if (this.state.bst.root === null) return;\n        clearTimeout(resizeTimer);\n        shift_x = this.calculateShiftX(document.getElementById('nodecontainer'));\n        resizeTimer = setTimeout(formatBinaryTree(this.state.bst), 3000 );\n    }\n\n    render(){ \n        return(\n            <PageWrapper id=\"pagewrapper\">\n                <div>\n                    <NodeContainer id=\"nodecontainer\" >\n                        <svg className=\"linecontainer\" id=\"svg-line\" />                    \n                    </NodeContainer>\n                </div>\n                <div>    \n                    <div className='tree-info' id='active-node-count'/>\n                    <div className='tree-info' id='tree-height'/>\n                    <form id='input-form' onSubmit={this.handleInputSubmit} className='controlForm'>\n                        <label>\n                            <input className='field' type=\"number\" value={this.state.inputValue} id=\"input-field\" onChange={this.handleInputChange}/> \n                            <button id='input-button' onClick={this.handleInputSubmit} className='inputButton'>Input</button>\n                        </label>\n                    </form>\n                    <form id='remove-form' onSubmit={this.handleRemoveSubmit} className='controlForm'>\n                        <label>\n                            <input className='field' type=\"number\" value={this.state.removeValue} id=\"remove-field\" onChange={this.handleRemoveChange}/> \n                            <button id='remove-button' onClick={this.handleRemoveSubmit} className='removeButton'>Remove</button>\n                        </label>\n                    </form>\n                    <div className='tree-info'> \n                        <label >\n                            Animate traversal\n                            <input type='checkbox' defaultChecked='on' id='traverse-checkbox' onChange={this.toggleTraverseOn}/>\n                        </label>\n                    </div>\n                    <label>\n                        Traversal Speed\n                        <input className='tree-info' type='range' defaultValue='1000' min='0' max='1400' id='traverse-interval-slider' onChange={this.handleIntervalChange}/>\n                    </label>\n                    <form id='multi-input' onSubmit={this.handleMultiSubmit}>\n                        <textarea className='multi-input tree-info' rows='5' value={this.state.multiInput} id='multi-field' onChange={this.handleMultiChange}/>\n                        <button id='multi-button' type='submit' />\n                    </form> \n                    <div className='tree-info' id='logs'/>\n                    <div className='tree-info' id='error-message'/>\n                </div>\n            </PageWrapper>\n        );\n    }\n}\n\nexport default AnimeTest;","import React from 'react';\nimport AnimeTest from './animetest';\nimport Navbar from './navbar';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background-color: #EFE7E2;\n    height: 100vh;\n`   \n\nconst Headline = styled.div`\n    font-family: Ramaraja;\n    font-size: 50px;\n    padding-left: 100px;\n    background-color: #EFE7E2;\n`\n\nfunction BST (props){\n    return (\n        <Wrapper>\n            <Navbar/>\n            <Headline>Binary Search Tree</Headline>\n            <motion.div key=\"home\" variants={props.variants} transition={props.transition} initial=\"pageInit\" animate=\"pageIn\" exit=\"pageOut\">\n                <AnimeTest/>\n            </motion.div>\n        </Wrapper>\n        \n    );\n}\n\nexport default BST;","import React from 'react';\nimport './App.css';\nimport Home from './components/home/home'\nimport About from './components/about'\nimport Catalog from './components/catalog'\nimport Premium from './components/premium'\nimport { BrowserRouter as Switch, Route, useLocation } from 'react-router-dom';\nimport {AnimatePresence} from \"framer-motion\";\nimport Reftree from './components/reftest';\nimport BST from './components/bst';\n\nconst PageVariants = {\n    pageIn : {\n        opacity: 1,\n        y: 0,\n        x: 0,\n    },\n    pageInit : {\n        opacity: 0,\n        y: 50,\n        scale: 1,\n    },\n    pageOut : {\n        opacity: 0,\n        y: -50,\n    }\n};\n\nconst PageTransition = {\n    type: \"tween\",\n    ease: \"anticipate\",\n};\n\nfunction App() {\n    let location = useLocation();\n    return (\n          <AnimatePresence exitBeforeEnter>\n              <Switch location={location} key={location.pathname}>\n                  <Route path='/' exact render={(props) => <Home {...props} transition={PageTransition} variants={PageVariants}/>} />\n                  <Route path='/test' exact render={(props) => <Reftree {...props} transition={PageTransition} variants={PageVariants}/>} />\n                  <Route path='/Binary Search Tree' exact render={(props) => <BST {...props} transition={PageTransition} variants={PageVariants}/> } />\n                  <Route path='/about' render={(props) => <About {...props} transition={PageTransition} variants={PageVariants}/>}/>\n                  <Route path='/catalog' exact render={(props) => <Catalog {...props} transition={PageTransition} variants={PageVariants}/>}/>\n                  <Route path='/premium' exact render={(props) => <Premium {...props} transition={PageTransition} variants={PageVariants}/>}/>\n              </Switch>\n          </AnimatePresence>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './resources/fonts/Ramaraja-Regular.ttf';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}